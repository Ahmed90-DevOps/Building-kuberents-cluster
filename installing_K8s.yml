---
- hosts: K8s
  name: play01 'configuration on all nodes'
  gather_facts: false

  tasks:
   - name: check nodes reachability
     ping:

   - name: disable selinux on all nodes
     shell: "{{item}}"
     with_items:
      - sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux

   - name: Reboot servers and wait for them to come back up.
     reboot:
   
   - name: installing k8s packages
     yum: name="{{item}}" state=present
     with_items:
      - kubelet
      - kubeadm
      - kubectl
      - docker
     notify:
       - start services
         
  handlers:
    - name: start services
      service: name="{{item}}" state=started enabled=yes
      with_items:
       - kubelet
       - docker

- name: play02 'configuration on master node'
  hosts: kuberents-master
  gather_facts: false

  tasks:
    - name: open ports on firewall
      shell: "{{item}}"
      with_items:
        - firewall-cmd --permanent --add-port=6443/tcp
        - firewall-cmd --permanent --add-port=2379-2380/tcp
        - firewall-cmd --permanent --add-port=10250/tcp
        - firewall-cmd --permanent --add-port=10251/tcp
        - firewall-cmd --permanent --add-port=10252/tcp
        - firewall-cmd --permanent --add-port=10255/tcp
        - firewall-cmd --reload
        - modprobe br_netfilter
        - echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables


    - name: nitialize Kubernetes Master
      shell: "{{item}}"
      with_items:
        - swapoff -a
        - sed -i '/swap/ s/^/#/' /etc/fstab
        - kubeadm init --apiserver-advertise-address=192.168.1.25 --pod-network-cidr=10.244.0.0/16
      register: save

    - local_action: copy content={{ save.stdout_lines[-2:] }} dest=/home/ahmed/github_repos/installing-kuberents/kubinit.log

    - name: show kubinit output
      debug: var=save

    - name: allow root user to use the cluster
      shell: "{{item}}"
      with_items:
        - mkdir -p $HOME/.kube
        - cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        - chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Configure Pod Network with Flannel
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

- name: play03 'configuration on worker nodes'
  hosts: kuberents-nodes
  gather_facts: false

  tasks:
    - name: open ports on firewall
      shell: "{{item}}"
      with_items:
        - firewall-cmd --permanent --add-port=6783/tcp
        - firewall-cmd --permanent --add-port=10250/tcp
        - firewall-cmd --permanent --add-port=30000-32767/tcp
        - firewall-cmd --permanent --add-port=10255/tcp
        - firewall-cmd --reload
        - modprobe br_netfilter
        - echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
        - swapoff -a
        - sed -i '/swap/ s/^/#/' /etc/fstab
